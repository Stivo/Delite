object SpadeRunnerFusingMain {
  def main(args: Array[String]) { }
}
class SpadeRunnerFusing extends ((Array[java.lang.String])=>(Unit)) {
  def apply(x0:Array[java.lang.String]): Unit = {
    val x6 = {
      if (x2) { }
    }
    val x8 = { 
      val x62 = while ({val x31 = x21 x32}) {
        val x46 = { }
        while (x38 < x37) {  // begin fat loop x46 } // end fat loop x46
        val x60 = { if (x53) {}
          else { }
        }
      }
    }
    while (x86 < x85) {  // begin fat loop x92
      val x91 = {
        if (x90) { } else { }
      }
    } // end fat loop x92
    val x134 = { (x104: Int, x105: Int) => 
      while (x127 < x69) {  // begin fat loop x256
        val x249 = {  }
        val x252 = {  }
      } // end fat loop x256
      val x257 = {  }
    }
    val x160 = while ({val x144 = x143 x145}) {
      val x151 = {
        if (x150) { } else { }
      }
      val x154 = {  }
      while (x175 < x156) {  // begin fat loop x157
        val x214 = {
          if (x210) { }
        }
        val x208 = { }
        while (x179 < x66) {  // begin fat loop x208,x260
          while (x201 < x69) {  // begin fat loop x282
            val x275 = {  }
            val x278 = {  }
          } // end fat loop x282
          val x283 = {  }
          if (x259) { }
        } // end fat loop x208,x260
        val x265 = {
          if (x216) {
            val x222 = { }
            while (x217 < x66) {  // begin fat loop x222 } // end fat loop x222
            while (x231 < x230) {  // begin fat loop x263
              x263 = { }
            } // end fat loop x263
          }
        }
        x157 = { }
      } // end fat loop x157
    }
    val x172 = while ({val x163 = x162 x164}) { }
  }
}
